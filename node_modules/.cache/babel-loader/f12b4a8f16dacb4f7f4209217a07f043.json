{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\benja\\\\Thinkful\\\\react-projects\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration } from \"../utils/duration\"; //import CountdownTimer from \"../pomodoro/CountdownTimer.js\";\n\nimport ActiveSession from \"../pomodoro/ActiveSession\"; // These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return { ...prevState,\n    timeRemaining\n  };\n}\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\n\n\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false); // The current session - null where there is no session running\n\n  const [session, setSession] = useState(null); // ToDo: Allow the user to adjust the focus and break duration.\n\n  const [focusDuration, setFocusDuration] = useState(25);\n\n  const handleFocus = event => {\n    event.preventDefault();\n    if (event.target.id === \"increaseFocus\" && focusDuration < 60) setFocusDuration(focusDuration + 5);else if (event.target.id === \"decreaseFocus\" && focusDuration > 5) setFocusDuration(focusDuration - 5);\n  };\n\n  const [breakDuration, setBreakDuration] = useState(5);\n\n  const handleBreak = event => {\n    event.preventDefault();\n    if (event.target.id === \"increaseBreak\" && breakDuration < 15) setBreakDuration(breakDuration + 1);else if (event.target.id === \"decreaseBreak\" && breakDuration > 1) setBreakDuration(breakDuration - 1);\n  };\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n\n\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    setProgressBar((focusDuration * 60 - session.timeRemaining) / (focusDuration * 60) * 100);\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n  const [progressBar, setProgressBar] = useState(0);\n  const [stopped, setStopped] = useState(true);\n  const [disableStop, setDisableStop] = useState(true);\n\n  const handleStop = () => {\n    setDisableStop(true);\n    setStopped(!stopped);\n    setIsTimerRunning(prevState => {\n      if (!prevState) return prevState;else {\n        const nextState = !prevState;\n        return nextState;\n      }\n      ;\n    });\n  };\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            setStopped(false);\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          } else if (prevStateSession.label === \"Focusing\" && prevStateSession.timeRemaining === 0) {\n            return {\n              label: \"On Break\",\n              timeRemaining: breakDuration * 60\n            };\n          } else if (prevStateSession.label === \"On Break\" && prevStateSession.timeRemaining === 0) {\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          ;\n          setStopped(false);\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"decreaseFocus\",\n    name: \"decreaseFocus\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    onClick: handleFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"increaseFocus\",\n    name: \"increaseFocus\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    onClick: handleFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"decreaseBreak\",\n    name: \"decreaseBreak\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    onClick: handleBreak,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    id: \"increaseBreak\",\n    name: \"increaseBreak\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    onClick: handleBreak,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    disabled: disableStop,\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"stop\",\n    title: \"Stop the session\",\n    onClick: handleStop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(ActiveSession, {\n    session: session,\n    progressBar: progressBar,\n    stopped: stopped,\n    focusDuration: focusDuration,\n    breakDuration: breakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/benja/Thinkful/react-projects/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","ActiveSession","nextTick","prevState","timeRemaining","Math","max","nextSession","focusDuration","breakDuration","currentSession","label","Pomodoro","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","handleFocus","event","preventDefault","target","id","setBreakDuration","handleBreak","Audio","play","setProgressBar","progressBar","stopped","setStopped","disableStop","setDisableStop","handleStop","nextState","playPause","prevStateSession","oi"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport {minutesToDuration} from \"../utils/duration\";\n//import CountdownTimer from \"../pomodoro/CountdownTimer.js\";\nimport ActiveSession from \"../pomodoro/ActiveSession\";\n\n// These functions are defined outside of the component to insure they do not have access to state\n// and are, therefore more likely to be pure.\n\n/**\n * Update the session state with new state after each tick of the interval.\n * @param prevState\n *  the previous session state\n * @returns\n *  new session state with timing information updated.\n */\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  return {\n    ...prevState,\n    timeRemaining,\n  };\n}\n\n/**\n * Higher order function that returns a function to update the session state with the next session type upon timeout.\n * @param focusDuration\n *    the current focus duration\n * @param breakDuration\n *    the current break duration\n * @returns\n *  function to update the session state.\n */\nfunction nextSession(focusDuration, breakDuration) {\n  /**\n   * State function to transition the current session type to the next session. e.g. On Break -> Focusing or Focusing -> On Break\n   */\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        timeRemaining: breakDuration * 60,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      timeRemaining: focusDuration * 60,\n    };\n  };\n}\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  // The current session - null where there is no session running\n  const [session, setSession] = useState(null);\n\n  // ToDo: Allow the user to adjust the focus and break duration.\n  const [focusDuration, setFocusDuration] = useState(25);\n  const handleFocus = (event) => {\n    event.preventDefault();\n    if(event.target.id === \"increaseFocus\" && focusDuration < 60) setFocusDuration(focusDuration + 5)\n    else if (event.target.id === \"decreaseFocus\" && focusDuration > 5) setFocusDuration(focusDuration - 5);\n  };\n\n\n  const [breakDuration, setBreakDuration] = useState(5);\n  const handleBreak = (event) => {\n    event.preventDefault();\n    if (event.target.id === \"increaseBreak\" && breakDuration < 15) setBreakDuration(breakDuration + 1)\n    else if (event.target.id === \"decreaseBreak\" && breakDuration > 1) setBreakDuration(breakDuration - 1);\n  };\n\n  /**\n   * Custom hook that invokes the callback function every second\n   *\n   * NOTE: You will not need to make changes to the callback function\n   */\n  useInterval(() => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      setProgressBar(((focusDuration*60-session.timeRemaining)/(focusDuration*60))*100);\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  const [progressBar, setProgressBar] = useState(0);\n\n  const [stopped, setStopped] = useState(true);\n\n  const [disableStop, setDisableStop] = useState(true);\n\n  const handleStop = () => {\n    setDisableStop(true);\n    setStopped(!stopped);\n    setIsTimerRunning((prevState) => {\n      if (!prevState) return prevState\n      else {\n        const nextState = !prevState;\n        return nextState;\n      };\n    });\n  };\n\n\n  /**\n   * Called whenever the play/pause button is clicked.\n   */\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            setStopped(false);\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          } else if (prevStateSession.label===\"Focusing\" && prevStateSession.timeRemaining===0){\n            return {\n              label: \"On Break\",\n              timeRemaining: breakDuration * 60,\n            };\n          } else if (prevStateSession.label===\"On Break\" && prevStateSession.timeRemaining===0){\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          };\n          setStopped(false);\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                id=\"decreaseFocus\"\n                name=\"decreaseFocus\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n                onClick={handleFocus}\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                type=\"button\"\n                id=\"increaseFocus\"\n                name=\"increaseFocus\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n                onClick={handleFocus}\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  id=\"decreaseBreak\"\n                  name=\"decreaseBreak\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                  onClick={handleBreak}\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  type=\"button\"\n                  id=\"increaseBreak\"\n                  name=\"increaseBreak\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                  onClick={handleBreak}\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session. and disable the stop button when there is no active session */}\n            {/* TODO: Disable the stop button when there is no active session */}\n            <button\n              type=\"button\"\n              disabled={disableStop}\n              className=\"btn btn-secondary\"\n              data-testid=\"stop\"\n              title=\"Stop the session\"\n              onClick={handleStop}\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <ActiveSession session={session} progressBar={progressBar} stopped={stopped} focusDuration={focusDuration} breakDuration={breakDuration}/>\n     {/* <div>*/}\n        {/* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\n        {/*<div className=\"row mb-2\">\n          <div className=\"col\">*/}\n            {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\n            {/*<h2 data-testid=\"session-title\">\n              {session?.label} for 25:00 minutes\n        </h2>*/}\n            {/* TODO: Update message below correctly format the time remaining in the current session */}\n            {/*<p className=\"lead\" data-testid=\"session-sub-title\">\n              {session ? secondsToDuration(session.timeRemaining) : null } remaining\n              </p>*/}\n            {/*<CountdownTimer session={session} />\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow={progressBar} // TODO: Increase aria-valuenow as elapsed time increases\n            style={{ width: progressBar+\"%\" }} // TODO: Increase width % as elapsed time increases\n            />\n            </div>\n          </div>\n            </div>\n            </div>*/}\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}